box:
  id: golang
build:
  steps:
    - script:
        name: install go libraries
        code: |
                # Set GOPATH
                export GOPATH="/pipeline/source/"
                export PATH="$PATH:$GOPATH/bin"

                go get github.com/gorilla/context
                go get github.com/gorilla/mux 
                go get github.com/rs/cors 

                cd /pipeline/source/
                go build -o GoRun /pipeline/source/main.go
    - script:
        name: check
        code: |
            pwd
            ls -l /pipeline/source/
            go version

push-to-releases:
  steps:
    # Push to OCI Registry
    - internal/docker-push:
        username: $OKE_USERNAME
        password: $OKE_PASSWORD
        repository: $OKE_REGISTRY/$OKE_REPOSITORY
        registry: https://$OKE_REGISTRY/v2
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        ports: 8001
        cmd: /pipeline/source/GoRun

deploy-to-oke:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - bash-template
    
    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes-deployment.yml

#    - script:
#        name: "TEST2"
#        code: export KUBECONFIG=$WERCKER_ROOT/config

#    - script:
#        name: "TEST3"
#        code: cat $KUBECONFIG

#    - kubectl:
#        name: delete namespace
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_TOKEN
#        insecure-skip-tls-verify: true
#        command: delete namespace $APP_FLIGHT_NAMESPACE --ignore-not-found=true
#        
#    - script:
#        name: wait to delete namespace
#        code: sleep 30
#        
#    - kubectl:
#        name: create namespace    
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_TOKEN
#        insecure-skip-tls-verify: true
#        command: create namespace $APP_FLIGHT_NAMESPACE

#    - kubectl:
#        name: delete secret
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_AUTH_TOKEN
#        insecure-skip-tls-verify: true
#        command: delete secret wecksecret; echo delete registry secret
#
#    - kubectl:
#        name: create secret
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_TOKEN
#        insecure-skip-tls-verify: true
#        command: create secret docker-registry wecksecret --docker-server=$OKE_REGISTRY --docker-username=$OKE_USERNAME --docker-password=$OKE_PASSWORD --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@gmail.com --namespace=$APP_NAMESPACE
#
#    - kubectl:
#        name: delete deplyoment
#        server: $KUBERNETES_MASTER
#        token: $KUBERNETES_TOKEN
#        insecure-skip-tls-verify: true
#        command: delete -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$APP_NAMESPACE

    - kubectl:
        name: create deplyoment
        server: $KUBERNETES_MASTER
        #certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqRENDQW5TZ0F3SUJBZ0lVYkpWWk5TZzFSSzFHREN5cThvT0RXcVNlL1lzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1hqRUxNQWtHQTFVRUJoTUNWVk14RGpBTUJnTlZCQWdUQlZSbGVHRnpNUTh3RFFZRFZRUUhFd1pCZFhOMAphVzR4RHpBTkJnTlZCQW9UQms5eVlXTnNaVEVNTUFvR0ExVUVDeE1EVDBSWU1ROHdEUVlEVlFRREV3WkxPRk1nClEwRXdIaGNOTWpBd01qRTJNak0wTVRBd1doY05NalV3TWpFME1qTTBNVEF3V2pCZU1Rc3dDUVlEVlFRR0V3SlYKVXpFT01Bd0dBMVVFQ0JNRlZHVjRZWE14RHpBTkJnTlZCQWNUQmtGMWMzUnBiakVQTUEwR0ExVUVDaE1HVDNKaApZMnhsTVF3d0NnWURWUVFMRXdOUFJGZ3hEekFOQmdOVkJBTVRCa3M0VXlCRFFUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOZDFnRnlVUkFJQWpqYUF0cjJrbkxsaFZHenV5M3Nldm96VE5vWVAKNTN5V3FyZTF0T1daUlZrcHpHbmlmMUJWUVpKSFdYQXJDZ3BTUVVyZzVJcjVmVXpUMUo5NVhVZk1pZHZkTnNRdQpEaDVrWkt5d01iNHR3b1VvTHAzNDRaQUEwN2M2UmdEWHZxYWZlQStGOXd6R3lKb09kSmpyb2MzRWZ1bm9UWlIvClNjVGJaVGtFK21pUFhqQWVkRm5yOWRCWGg4RW5rdXVMZzVwUDY2a3ZLYld0c21tWnU1S3VrYmsyR0VDWDYyWXkKR2lDR25pMXZmWm5ac0FnNE5oS2dOTmxwaTMxbVZuNnRaaGZvRUdkSHhSdHA5eERQQVA2VGVXOC9ndlViSkxDQQpPUm5NU2haKzlTOXZCekVpVWJ3WC9ZSk1JclB6MlFzaVU5bUJ5L2tUTGViQUR6Y0NBd0VBQWFOQ01FQXdEZ1lEClZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTjhtQ28zbWNSTXUKaGdXdjRQVTNKK0tkd1dPSU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlNaaXlnaDF4VUY4VnJHdkFuVXlhcwpyeG9QU3R2elNsOENIMXkxUVVXSnRCa1lSZ2tWU3hGSGh0WndYTDFaaG15ZGw1RDBYaVJsRmp4NWJZQVJzMmtPCmJxVGlSRk5LTmdTZ0NQcjNpWVpwSVNEYVpDK3dMNnBLKzdmbnlNVlVLWFZFaGFMT2h0aElEWkhCZm1EbEZ2UW4KTlBWbERXOVBYazVYS0FRYjdRS1MrRFhDS1dOaVVod2s1TnNLc1hvdElwbW1OaUpxQUk4akxmYnNqbi94SzFZcwpGbzArSUcxRkFBNU8zRVhxdDFvSnRpZ1I4ZlQvNXUrcmNkbEFZN0tCVkd4dW1UQVRCcVpjZWhsZkdGWEhvNFJFClYxaFd5NlFtMTlDdkwzWW0zbTQ4MTJoekNkMmpQaXdHTExQMnc0USt0Mmhod0E5OG9tYm5aVWRlRWhmQ1JHKysKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create -f $WERCKER_ROOT/kubernetes-deployment.yml

